{"mappings":";;;AAAA,2CAA2C;;;ACG3C,IAAA,4CAAA,WAAA,GAAA;IAQE,SAAA;QAFA,IAAA,CAAA,QAAa;QAGX,IAAI,CAAC,OAAO,CAAA,GAAA,yBAAA,EAAM,OAAO;QACzB,IAAI,CAAC,WAAW;YACd,KAAK,CAAA,GAAA,yBAAA,EAAM,SAAS;YACpB,KAAK,CAAA,GAAA,yBAAA,EAAM,SAAS;QAErB;IACH;IAEA,KAAA,UAAA,gBAAA;QACE,OAAO,kBAAA,OAAkB,IAAI,CAAC,MAAI;IACpC;IACF,OAAA;AAAA;;;;ACnBC,IAAA,4CAAA,WAAA,GAAA;IASC,SAAA;QAFA,IAAA,CAAA,QAAe;QAGb,IAAI,CAAC,cAAc,CAAA,GAAA,yBAAA,EAAM,QAAQ;QACjC,IAAI,CAAC,cAAc,CAAA,GAAA,yBAAA,EAAM,QAAQ;QACjC,IAAI,CAAC,WAAW;YACd,KAAK,CAAA,GAAA,yBAAA,EAAM,SAAS;YACpB,KAAI,CAAA,GAAA,yBAAA,EAAM,SAAS;QACpB;IACH;IAEA,QAAA,UAAA,gBAAA;QAEE,OAAO,sCAAA,OAEa,IAAI,CAAC,aAAW,gCAAA,OACjB,IAAI,CAAC,aAAW;IAGrC;IACF,OAAA;AAAA;;;ACrBA,IAAA,4CAAA,WAAA,GAAA;IAGE,SAAA,UAAY,KAAY;QACvB,IAAI,CAAC,YAAY,IAAI,OAAO,KAAK,IAAI,SAAS,eAAe,QAAuB;YACrF,MAAM;YACN,QAAQ;gBACN,KAAK;gBACL,KAAI;YACL;QACF;IACD;IAEE,UAAA,UAAA,YAAA,SAAW,QAAkB;QAA7B,IAAA,QAAA,IAAA;QACC,IAAM,SAAS,IAAI,OAAO,KAAK,OAAO;YACnC,KAAK,IAAI,CAAC;YACV,UAAS;gBACP,KAAI,SAAS,SAAS;gBACtB,KAAI,SAAS,SAAS;YAAI;QAC3B;QACD,OAAO,YAAY,SAAQ;YACzB,IAAM,aAAW,IAAI,OAAO,KAAK,WAAW;gBAC1C,SAAQ,SAAS;YAClB;YAED,WAAW,KAAK,MAAK,WAAU;QACjC;IACJ;IACF,OAAA;AAAA;;;AH1BA,IAAM,6BAAO,IAAI,CAAA,GAAA,yCAAA;AACjB,IAAM,gCAAU,IAAI,CAAA,GAAA,yCAAA;AAEpB,IAAM,+BAAS,SAAS,cAAc;AACtC,6BAAO,MAAM,+CAAA,kDAAkE;AAC/E,6BAAO,QAAQ;AAEf,SAAS;IACT,IAAI,MAAM,IAAI,CAAA,GAAA,yCAAA,EAAU;IACxB,IAAI,UAAW;IACf,IAAI,UAAU;AACd;AAEA,OAAO,UAAQ;AACf,SAAS,KAAK,YAAY","sources":["src/index.ts","src/User.ts","src/Company.ts","src/CustomMap.ts"],"sourcesContent":["/// <reference types=\"@types/google.maps\"/>\nimport 'dotenv/config'\nimport { User } from './User';\nimport { Company } from './Company';\nimport {CustomMap} from './CustomMap';\n\ndeclare global {\n  interface Window {\n    initMap: () => void;\n  }\n}\n\nconst user = new User();\nconst company = new Company();\n\nconst script = document.createElement('script');\nscript.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.API_KEY}&libraries=places&callback=initMap`;\nscript.async = true;\n\nfunction initMap () { \nlet map = new CustomMap('map');\nmap.addMarker( user );\nmap.addMarker(company);\n};\n\nwindow.initMap=initMap;\ndocument.head.appendChild(script);\n\n\n\n\n\n\n","import {faker} from \"@faker-js/faker\"\nimport { Mappable } from \"./CustomMap\";\n\nexport class User implements Mappable{\n  name: string;\n  location: {\n    lat: number;\n    lng: number;\n  };\n  color:string='red';\n\n  constructor() {\n    this.name = faker.person.firstName();\n    this.location = {\n      lat: faker.location.latitude(),\n      lng: faker.location.longitude(),\n     \n    }\n  }\n\n  markerContent():string{\n    return `<h2>User Name: ${this.name}</h2>`\n  }\n}\n","import { faker } from '@faker-js/faker';\nimport { Mappable\n } from './CustomMap';\n\n export class Company implements Mappable{\n  companyName: string;\n  catchPhrase: string;\n  location: {\n    lat: number;\n    lng: number;\n  };\n  color: string ='red'\n\n  constructor() {\n    this.companyName = faker.company.name();\n    this.catchPhrase = faker.company.catchPhrase();\n    this.location = {\n      lat: faker.location.latitude(),\n      lng:faker.location.longitude(),\n    }\n  }\n\n  markerContent():string{\n\n    return `\n    <div>\n    <h1>Company Name: ${this.companyName}</h1>\n    <h3>Catchphrase: ${this.catchPhrase}</h3>\n    </div>\n    `\n  }\n}","\nexport interface Mappable{\n  location:{\n    lat:number;\n    lng:number;\n  };\n  markerContent():string;\n  color:string;\n}\n\nexport class CustomMap{\n  private googleMap: google.maps.Map;\n\n  constructor(divId:string) {\n   this.googleMap = new google.maps.Map(document.getElementById(divId) as HTMLElement, {\n  zoom: 1,\n  center: {\n    lat: 0,\n    lng:0\n  }\n})\n}\n  \n  addMarker( mappable: Mappable):void {\n   const marker = new google.maps.Marker({\n      map: this.googleMap, \n      position:{\n        lat:mappable.location.lat,\n        lng:mappable.location.lng}\n      })\n      marker.addListener('click',()=>{\n        const infoWindow=new google.maps.InfoWindow({\n          content:mappable.markerContent()\n        });\n\n        infoWindow.open(this.googleMap,marker)\n      })\n  }\n}"],"names":[],"version":3,"file":"index.js.map"}